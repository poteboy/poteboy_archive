{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/home.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"names":["children","path","useState","window","innerWidth","setWidth","innerHeight","setOrientation","useEffect","updateWidth","addEventListener","removeEventListener","Table","styled","Left","IconBox","IconImage","Name","Links","LinkBox","SNS","IconTransition","keyframes","SnsIcon","SnsName","image","useStaticQuery","src","file","publicURL","alt","SnsLinks","map","r","href","link","title","name","target","rel","icon","iconName","size","faGithub","faLinkedin","faTwitter","faPalette"],"mappings":"kMA+NA,IAjNwB,SAAC,GAAqB,IAApBA,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAAU,GAEhBC,cACJ,oBAAXC,OAAyBA,OAAOC,WAAa,MAD1CC,GAF4B,cAOJH,cAChB,oBAAXC,QAA0BA,OAAOC,WAAaD,OAAOG,YAAc,YAA4B,YADtFC,GAPsB,YAU1CC,gBAAU,WACN,IAAMC,EAAc,WAChBJ,EAASF,OAAOC,YACbD,OAAOG,YAAcH,OAAOC,WAC3BG,EAAe,YAEfA,EAAe,cAIvB,OADAJ,OAAOO,iBAAiB,SAAUD,GAC3B,kBAAMN,OAAOQ,oBAAoB,SAAUF,OAGtD,IAAMG,EAAQC,oBAAH,uDAAGA,CAAH,iIAIiB,SAATZ,EAAkB,MAAQ,QAOvCa,EAAOD,oBAAH,sDAAGA,CAAH,2HACY,SAATZ,EAAkB,OAAS,MAMV,SAATA,EAAkB,mBAAqB,GAItDc,EAAUF,oBAAH,yDAAGA,CAAH,yIAUPG,EAAYH,oBAAH,2DAAGA,CAAH,iIAaTI,EAAOJ,oBAAH,sDAAGA,CAAH,+MAeJK,EAAQL,oBAAH,uDAAGA,CAAH,0JAWLM,EAAUN,oBAAH,yDAAGA,CAAH,iIAUPO,EAAMP,kBAAH,qDAAGA,CAAH,mGAwBHQ,IAfaC,QAAH,mHAeOA,QAAH,uFAedC,EAAUV,oBAAH,yDAAGA,CAAH,qSASQQ,GAafG,EAAUX,qBAAH,yDAAGA,CAAH,oGASPY,GAAQC,oBAAe,cAU7B,OACQ,gBAACd,EAAD,KACI,gBAACE,EAAD,KACI,gBAACC,EAAD,KACI,gBAACC,EAAD,CAAWW,IAAKF,EAAMG,KAAKC,UAAWC,IAAI,qCAE9C,gBAACb,EAAD,qBACA,gBAACC,EAAD,KACQ,gBAACC,EAAD,KACKY,EAASC,KAAK,SAACC,GAAD,OAAO,gBAACb,EAAD,CAAKc,KAAMD,EAAEE,KAAMC,MAAOH,EAAEI,KAAMC,OAAO,SAASC,IAAI,YACxE,gBAAChB,EAAD,KACI,gBAAC,IAAD,CAAiBiB,KAAMP,EAAEQ,SACzBC,KAAK,OAEL,gBAAClB,EAAD,KAAUS,EAAEI,cAMnCrC,IAcjB,IAAM+B,EAAsB,CACxB,CACII,KAAM,6BACNE,KAAM,SACNI,SAAUE,OAEd,CACIR,KAAM,2CACNE,KAAM,WACNI,SAAUG,OAEd,CACIT,KAAM,gCACNE,KAAM,UACNI,SAAUI,OAEd,CACIV,KAAM,uCACNE,KAAM,QACNI,SAAUK,S,qFC3OlB,UATkB,WAChB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAM7C,KAAK,QAAQ","file":"component---src-pages-index-tsx-01331f0af3d28cd1e176.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { faGithub, faLinkedin, faTwitter, IconDefinition } from '@fortawesome/free-brands-svg-icons';\nimport { faPaintBrush, faPalette } from '@fortawesome/free-solid-svg-icons';\nimport styled, { keyframes } from 'styled-components'\nimport Particles from 'react-particles-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Path } from 'src/entity/path';\n\ntype Props =  {\n    children: any,\n    path: Path\n}\n\nconst Home: FC<Props> = ({children, path}) => {\n\n    const [width, setWidth] = useState(\n        typeof window !== \"undefined\" ? window.innerWidth : 1195\n      );\n    type Orientation = \"portrait\" | 'landscape';\n\n    const [orientation, setOrientation] = useState<Orientation>(\n        typeof window !== \"undefined\" ? (window.innerWidth > window.innerHeight ? 'landscape' : 'portrait') : 'portrait'\n    );\n    useEffect(() => {\n        const updateWidth = () => {\n            setWidth(window.innerWidth)\n            if(window.innerHeight > window.innerWidth){\n                setOrientation('portrait')\n            } else {\n                setOrientation('landscape')\n            }\n        }\n        window.addEventListener('resize', updateWidth);\n        return(() => window.removeEventListener('resize', updateWidth))\n    })\n\n    const Table = styled.div`\n        color: snow;\n        display: flex;\n        flex-direction: row;\n        margin-left: ${path === 'home' ? \"0px\" : \"80px\" };\n        @media (max-width: 1194px) {\n            flex-direction: column;\n            margin-left: 0px;\n        }\n    `;\n\n    const Left = styled.div`\n        width: ${path === 'home' ? \"100%\" : \"40%\"};\n        display: flex;\n        flex-direction: column;\n        @media (max-width: 1194px) {\n            width: 100%;\n            flex-direction: column;\n            transform: ${path === 'home' ? 'translateY(15vh)' : 0}\n        }\n    `;\n\n    const IconBox = styled.div`\n        margin: 5em auto 0 auto;\n        transform: translateX(0.5em);\n        padding: 5vh 5vh 0 5vh;\n        @media (max-width: 1194px) {\n            margin: 0 auto 0 auto;\n            padding: 0;\n        }\n    `;\n\n    const IconImage = styled.img`\n        text-align: center;\n        border-radius: 80px;\n        width: 140px;\n        height: 140px;\n        margin: auto;\n        // box-shadow: 2px 3px 7px #2dcece;\n        @media (max-width: 600px) {\n            width: 90px;\n            height: 90px;\n        }\n    `;\n\n    const Name = styled.div`\n        margin: auto;\n        padding: 3vh;\n        font-family: 'Quicksand';\n        font-size: 40px;\n        background: transparent;\n        backdrop-filter: blur(5px);\n        @media (max-width: 1194px) {\n            margin: 0 auto 0 auto;\n            padding: 0;\n            padding-top: 1vh;\n            font-size: 25px;\n        }\n    `;\n\n    const Links = styled.div`\n        z-index: 100;\n        margin: 1em auto auto auto;\n        width: 30vh;\n        background: transparent;\n        backdrop-filter: blur(5px);\n        @media (max-width: 1194px) {\n            margin: 0 auto 3vh auto;\n        }\n    `;\n\n    const LinkBox = styled.div`\n        display: flex;\n        flex-direction: column;\n        @media (max-width: 1194px) {\n            flex-direction: row;\n            align-items: center;\n            justify-content: center;\n        }\n    `;\n\n    const SNS = styled.a`\n        text-decoration: none;\n        color: snow;\n        margin: 0.5vh;\n        @media (max-width: 1194px) {\n            transform: scale(0.7);\n        }\n    `;\n\n    const Transition = keyframes`\n        0%, 100% {\n            border-color: #2dcece;\n        }\n        25% {\n            border-color: #ce93d8;\n        }\n        50% {\n            border-color: #ffcc80;\n        }\n        75% {\n            border-color: #80deea;\n        }\n    `;\n\n    const IconTransition = keyframes`\n        0%, 100% {\n            color: #2dcece;\n        }\n        25% {\n            color: #ce93d8;\n        }\n        50% {\n            color: #ffcc80;\n        }\n        75% {\n            color: #80deea;\n        }\n    `;\n\n    const SnsIcon = styled.div`\n        display: flex;\n        padding: 1vh;\n        border: solid 1px;\n        border-radius: 15px;\n        // animation: ${Transition} 3s ease-in-out infinite;\n        // box-shadow: 0px 0px 4px 0px #2dcece;\n        &:hover {\n            background-color: snow;\n            animation: ${IconTransition} 3s ease-in-out infinite;\n            z-index: 1000;\n            transform: scale(1.03);\n            cursor: pointer;\n            border-color: snow;\n            box-shadow: 3px 5px 5px 0px #2dcece;\n        }\n        @media (max-width: 1194px) {\n            border: none;\n            box-shadow: none;\n        }\n    `;\n\n    const SnsName = styled.span`\n        font-family: 'Quicksand';\n        text-align: center;\n        margin: auto;\n        @media (max-width: 1194px) {\n            display: none;\n        }\n    `;\n\n    const image = useStaticQuery(\n        graphql`\n        {\n            file(name: { eq: \"poteicon\" }) {\n                publicURL\n            }\n        }\n        `\n    )\n\n    return(\n            <Table>\n                <Left>\n                    <IconBox>\n                        <IconImage src={image.file.publicURL} alt=\"keita furuse aka poteboy's icon\"/>\n                    </IconBox>\n                    <Name>Keita Furuse</Name>\n                    <Links>\n                            <LinkBox>\n                                {SnsLinks.map( (r) => <SNS href={r.link} title={r.name} target=\"_blank\" rel=\"noopener\">\n                                    <SnsIcon>\n                                        <FontAwesomeIcon icon={r.iconName}\n                                        size=\"2x\"\n                                        />\n                                        <SnsName>{r.name}</SnsName>\n                                    </SnsIcon>\n                                </SNS>)}\n                            </LinkBox>\n                        </Links> \n                </Left>\n                {children}\n            </Table>\n    )\n}\n\nexport default Home\n\n\ninterface SnsLink  {\n    link: string,\n    name: string,\n    iconName: IconDefinition\n}\n\nconst SnsLinks: SnsLink[] = [\n    {\n        link: \"https://github.com/poteboy\",\n        name: 'GitHub',\n        iconName: faGithub\n    },\n    {\n        link: \"https://www.linkedin.com/in/keitafuruse/\",\n        name: 'LinkedIn',\n        iconName: faLinkedin\n    },\n    {\n        link: \"https://twitter.com/_poteboy_\",\n        name: 'Twitter',\n        iconName: faTwitter\n    },\n    {\n        link: \"https://www.pixiv.net/users/59139347\",\n        name: 'Pixiv',\n        iconName: faPalette\n    }\n]","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from '../components/layout';\nimport Home from '../components/home';\nimport Top from '../components/top'\nimport Meta from '../components/meta';\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Meta/>\n      <Home path='home'>{null}</Home>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}